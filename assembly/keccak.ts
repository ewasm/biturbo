/**
 * to call a wasm function defined outside of AS from within AS, I guess
 * we have declare it as an import. the function won't actually be an imported
 * host function, because in gulpfile.js we splice the wat code and paste keccak-funcs.wat
 * into the AssemblyScript output main.wat.
 * then the keccak function will be declared twice (once as an import statement
 * generated by AS, and a second time as the function def/wat code pasted in).
 * so to make it valid again, gulpfile.js will find and delete the import statement
 * put there by AS.
 */

@external('watimports', '$ethash_keccak256')
export declare function ethash_keccak256(outputOffset: i32, inputOffset: i32, inputLen: i32): void

/*

    (call $_ethash_keccak256
      (i32.const 16384) ;; output offset 1024 * 16
      (i32.const 0)    ;; mem offset in
      (i32.const 266)  ;; input length
    )

* test vector from https://github.com/axic/keccak-wasm/blob/master/test.wast
;; input (136 bytes of zeroes): 00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
;; output (keccak-256): 3a5912a7c5faa06ee4fe906253e339467a9ce87d533c65be3c15cb231cdb25f9
*
*/
